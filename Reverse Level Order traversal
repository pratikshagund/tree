vector<int> reverseLevelOrder(Node *root)
{
    vector<int> v;
    stack<Node*> s;
    queue<Node*> q;
    q.push(root);
    while(!q.empty())
    {
        Node* n = q.front();
        q.pop();
        s.push(n);
        if(n->right)
            q.push(n->right); 
        if(n->left)
            q.push(n->left);
        
    }
    while(!s.empty())
    {
        Node* item = s.top();
        s.pop();
        v.push_back(item->data);
    }
    return v;
}
**************************
0(N)
0(N)
**************************
